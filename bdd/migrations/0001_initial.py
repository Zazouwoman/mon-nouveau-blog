# Generated by Django 4.0.3 on 2022-04-24 17:12

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Affaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('soldee', models.BooleanField(default='False')),
                ('Type_Dossier', models.CharField(default='A', max_length=3)),
                ('Indice_Dossier', models.IntegerField(blank=True, default=0)),
                ('Ref_Affaire', models.CharField(default='A0001', max_length=50, verbose_name='Réf. Affaire')),
                ('Nom_Affaire', models.CharField(blank=True, max_length=100, null=True, verbose_name="Nom de l'Affaire")),
                ('Honoraires_Global', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Honoraire Global H.T.')),
                ('Date_Creation', models.DateField(default=datetime.date.today, verbose_name='Date de création')),
                ('Date_Previsionnelle', models.DateField(blank=True, default=None, null=True, verbose_name='Date prévisionnelle de facturation')),
                ('Type_Affaire', models.CharField(blank=True, choices=[('C', 'Conseil'), ('AMO', 'AMO'), ('DA', 'Diag/Audit')], max_length=12, verbose_name="Type d'Affaire")),
                ('Etat', models.CharField(blank=True, choices=[('EC', 'En Cours'), ('ARC', 'Archivée')], default='EC', max_length=8, verbose_name="Etat de l'Affaire")),
            ],
            options={
                'ordering': ['Nom_Affaire'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Type_Dossier', models.CharField(default='C', max_length=3)),
                ('Indice_Dossier', models.IntegerField(blank=True, default=0)),
                ('Numero_Client', models.CharField(default='C0001', max_length=50, verbose_name='Numéro de Client')),
                ('Denomination_Sociale', models.CharField(max_length=50, verbose_name='Dénomination sociale')),
                ('SIRET', models.CharField(blank=True, max_length=50, verbose_name='N° de SIRET')),
                ('Adresse', models.CharField(blank=True, max_length=500)),
                ('CP', models.CharField(blank=True, max_length=5, validators=[django.core.validators.RegexValidator(message='le code postal doit être composé de 5 chiffres.', regex='^[0-9]+$')], verbose_name='Code postal')),
                ('Ville', models.CharField(blank=True, max_length=150)),
                ('Civilite', models.CharField(blank=True, choices=[('M.', 'M.'), ('Mme', 'Mme')], max_length=3)),
                ('Nom_Representant', models.CharField(blank=True, max_length=50, verbose_name='Nom')),
                ('Prenom_Representant', models.CharField(blank=True, max_length=50, verbose_name='Prénom')),
                ('Tel_Representant', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message='Un numero de téléphone est attendu. On attend 10 chiffres.', regex='^[0-9]+$')], verbose_name='Numéro de téléphone')),
                ('Email_Representant', models.EmailField(blank=True, max_length=70, verbose_name='Email')),
            ],
            options={
                'ordering': ['Denomination_Sociale'],
            },
        ),
        migrations.CreateModel(
            name='Compteur_Indice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Type_Dossier', models.CharField(max_length=3)),
                ('Periode', models.CharField(max_length=10)),
                ('Compteur', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Entreprise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nom', models.CharField(blank=True, max_length=50, verbose_name='Nom de la societe')),
                ('SIRET', models.CharField(blank=True, max_length=50, verbose_name='N° de SIRET')),
                ('Adresse', models.CharField(blank=True, max_length=500)),
                ('Complement_Adresse', models.CharField(blank=True, max_length=500, verbose_name="Complément d'Adresse")),
                ('CP', models.CharField(blank=True, max_length=5, validators=[django.core.validators.RegexValidator(message='le code postal doit être composé de 5 chiffres.', regex='^[0-9]+$')], verbose_name='Code postal')),
                ('Ville', models.CharField(blank=True, max_length=150)),
                ('Type_Societe', models.CharField(blank=True, max_length=150, verbose_name='Statut juridique')),
                ('IBAN', models.CharField(blank=True, max_length=150, verbose_name='IBAN')),
                ('Code_APE', models.CharField(blank=True, max_length=150, verbose_name='Code APE')),
                ('Capital', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Capital')),
                ('Num_TVA', models.CharField(blank=True, max_length=150, verbose_name='N° de TVA Intercommunautaire')),
                ('Email', models.EmailField(blank=True, max_length=70)),
                ('Tel', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message='Un numero de téléphone est attendu. On attend 10 chiffres.', regex='^[0-9]+$')], verbose_name='Numéro de Portable')),
                ('Site_Web', models.URLField(blank=True, max_length=300)),
                ('Facebook', models.URLField(blank=True, max_length=300)),
                ('Twitter', models.URLField(blank=True, max_length=300)),
                ('Linkedin', models.URLField(blank=True, max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Envoi_Facture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Denomination_Sociale', models.CharField(max_length=50, verbose_name='Dénomination sociale')),
                ('Adresse', models.CharField(max_length=500)),
                ('CP', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator(message='le code postal doit être composé de 5 chiffres.', regex='^[0-9]+$')], verbose_name='Code postal')),
                ('Ville', models.CharField(max_length=150)),
                ('Civilite', models.CharField(blank=True, choices=[('M.', 'M.'), ('Mme', 'Mme')], max_length=3)),
                ('Nom_Contact', models.CharField(blank=True, max_length=50, verbose_name='Nom')),
                ('Prenom_Contact', models.CharField(blank=True, max_length=50, verbose_name='Prénom')),
                ('Tel_Contact', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message='Un numero de téléphone est attendu. On attend 10 chiffres.', regex='^[0-9]+$')], verbose_name='Numéro de téléphone')),
                ('Email_Contact', models.EmailField(blank=True, max_length=70, verbose_name='Email')),
                ('Mode_Paiement', models.CharField(choices=[('ND', 'Non défini'), ('VI', 'Virement'), ('CH', 'Chèque'), ('CB', 'Carte Bancaire'), ('ES', 'Espèces')], default='Non défini', max_length=20, verbose_name='Mode de Paiement')),
                ('Delais_Paiement', models.IntegerField(default=30, verbose_name='Délais de Paiement (en jours)')),
                ('Fin_Mois', models.CharField(choices=[('Oui', 'Oui'), ('Non', 'Non')], default='Non', max_length=3, verbose_name='Fin de Mois')),
                ('Modalites_Paiement', models.TextField(blank=True, verbose_name='Modalités particulières de Paiement')),
            ],
            options={
                'ordering': ['Denomination_Sociale', 'Nom_Contact'],
            },
        ),
        migrations.CreateModel(
            name='Envoi_Offre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Denomination_Sociale', models.CharField(max_length=50, verbose_name='Dénomination Sociale')),
                ('Adresse', models.CharField(blank=True, max_length=500)),
                ('CP', models.CharField(blank=True, max_length=5, validators=[django.core.validators.RegexValidator(message='le code postal doit être composé de 5 chiffres.', regex='^[0-9]+$')], verbose_name='Code postal')),
                ('Ville', models.CharField(blank=True, max_length=150)),
                ('Civilite', models.CharField(blank=True, choices=[('M.', 'M.'), ('Mme', 'Mme')], max_length=3)),
                ('Nom_Contact', models.CharField(blank=True, max_length=50, verbose_name='Nom')),
                ('Prenom_Contact', models.CharField(blank=True, max_length=50, verbose_name='Prénom')),
                ('Tel_Contact', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message='Un numero de téléphone est attendu. On attend 10 chiffres.', regex='^[0-9]+$')], verbose_name='Numéro de téléphone')),
                ('Email_Contact', models.EmailField(blank=True, max_length=70, verbose_name='Email')),
            ],
            options={
                'ordering': ['Denomination_Sociale', 'Nom_Contact'],
            },
        ),
        migrations.CreateModel(
            name='InfoEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('From', models.EmailField(max_length=70, verbose_name='De')),
                ('To', models.EmailField(max_length=70, verbose_name='A')),
                ('Subject', models.CharField(default='Facture Ingeprev', max_length=200, verbose_name='Sujet')),
                ('Message', models.TextField()),
                ('File', models.FileField(blank=True, upload_to='')),
                ('ID_Facture', models.IntegerField(blank=True, null=True)),
                ('Type_Action', models.CharField(blank=True, max_length=100)),
                ('RAR', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pilote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Civilite', models.CharField(blank=True, choices=[('M.', 'M.'), ('Mme', 'Mme')], max_length=3)),
                ('Nom', models.CharField(blank=True, max_length=50)),
                ('Prenom', models.CharField(blank=True, max_length=50)),
                ('Tel_Portable', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message='Un numero de téléphone est attendu. On attend 10 chiffres.', regex='^[0-9]+$')], verbose_name='Numéro de Portable')),
                ('Tel_Fixe', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message='Un numero de téléphone est attendu. On attend 10 chiffres.', regex='^[0-9]+$')], verbose_name='numéro de Fixe')),
                ('Email', models.EmailField(blank=True, max_length=70)),
            ],
        ),
        migrations.CreateModel(
            name='Offre_Mission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Type_Dossier', models.CharField(default='OM', max_length=3)),
                ('Indice_Dossier', models.IntegerField(blank=True, default=0)),
                ('Ref_Mission', models.CharField(default='OM0001', max_length=50, verbose_name='Réf. Mission')),
                ('Nom_Mission', models.CharField(max_length=100, verbose_name='Nom de la mission')),
                ('Adresse', models.CharField(blank=True, max_length=500)),
                ('CP', models.CharField(blank=True, max_length=5, validators=[django.core.validators.RegexValidator(message='le code postal doit être composé de 5 chiffres.', regex='^[0-9]+$')], verbose_name='Code postal')),
                ('Ville', models.CharField(blank=True, max_length=150)),
                ('Honoraires_Proposes', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Honoraires H.T.')),
                ('Date_Proposition', models.DateField(default=datetime.date.today, verbose_name='Date de Proposition')),
                ('Date_Acceptation', models.DateField(blank=True, default=None, null=True, verbose_name="Date d'acceptation")),
                ('Descriptif', models.TextField()),
                ('Etat', models.CharField(choices=[('ATT', 'En Attente'), ('ACC', 'Acceptée'), ('REF', 'Sans suite')], default='ATT', max_length=20)),
                ('ID_Apporteur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_ID_Apporteur', to='bdd.client', verbose_name="Apporteur d'affaire")),
                ('ID_Client_Cache', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_ID_Client_Cache', to='bdd.client', verbose_name='Client Caché')),
                ('ID_Envoi_Offre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bdd.envoi_offre', verbose_name='Adresse Envoi Offre')),
                ('ID_Payeur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_ID_Payeur', to='bdd.client', verbose_name='Payeur')),
                ('ID_Pilote', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bdd.pilote', verbose_name='Pilote')),
            ],
            options={
                'ordering': ['Nom_Mission'],
            },
        ),
        migrations.CreateModel(
            name='Facture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deja_validee', models.BooleanField(default=False, verbose_name='Validée')),
                ('deja_envoyee', models.BooleanField(default=False, verbose_name='Envoyée')),
                ('deja_payee', models.BooleanField(default=False, verbose_name='Payée')),
                ('Numero_Facture', models.CharField(blank=True, default='', max_length=50, verbose_name='Numéro de facture')),
                ('Indice_Facture', models.IntegerField(blank=True, default=0)),
                ('Nom_Affaire', models.CharField(blank=True, max_length=100, null=True, verbose_name="Nom de l'Affaire")),
                ('Descriptif', models.TextField()),
                ('Montant_Facture_HT', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Montant de la facture H.T.')),
                ('Taux_TVA', models.CharField(choices=[('20', '20'), ('10', '10'), ('5', '5'), ('0', '0')], default='20', max_length=2, verbose_name='Taux de T.V.A.')),
                ('Date_Facture', models.DateField(default=datetime.date.today, verbose_name='Date de la facture')),
                ('Facture_Avoir', models.CharField(choices=[('FA', 'Facture'), ('AV', 'Avoir')], default='FA', max_length=10, verbose_name='Facture ou Avoir')),
                ('Etat', models.CharField(choices=[('BR', 'Brouillon'), ('VA', 'Validée'), ('ENV', 'Envoyée')], default='BR', max_length=8, verbose_name='Etat')),
                ('Etat_Paiement', models.CharField(blank=True, choices=[('ATT', 'En Attente'), ('PAYE', 'Payée')], default='ATT', max_length=8, verbose_name='Etat du paiement')),
                ('Date_Envoi', models.DateField(blank=True, default=datetime.date.today, verbose_name="Date d'envoi")),
                ('Date_Relance1', models.DateField(blank=True, default=datetime.date.today, verbose_name='Date de relance1 - relance par mail')),
                ('Date_Relance2', models.DateField(blank=True, default=datetime.date.today, verbose_name='Date de relance2 - relance téléphonique')),
                ('Date_Relance3', models.DateField(blank=True, default=datetime.date.today, verbose_name='Date de relance3 - relance courrier')),
                ('Date_Relance4', models.DateField(blank=True, default=datetime.date.today, verbose_name='Date de relance4 - relance RAR')),
                ('Date_Relance5', models.DateField(blank=True, default=datetime.date.today, verbose_name='Date de relance5 - mise en demeure')),
                ('Date_Dernier_Rappel', models.DateField(blank=True, default=datetime.date.today, verbose_name='Date dernier rappel')),
                ('Num_Relance', models.IntegerField(blank=True, default=0)),
                ('Num_RAR', models.CharField(blank=True, default='A préciser', max_length=20, verbose_name='Numéro RAR relance 4')),
                ('Num_RAR_Demeure', models.CharField(blank=True, default='A préciser', max_length=20, verbose_name='Numéro RAR mise en demeure')),
                ('Mode_Paiement', models.CharField(choices=[('ND', 'Non défini'), ('VI', 'Virement'), ('CH', 'Chèque'), ('CB', 'Carte Bancaire'), ('ES', 'Espèces')], default='Non défini', max_length=20, verbose_name='Mode de Paiement')),
                ('Delais_Paiement', models.IntegerField(default=30, verbose_name='Délais de Paiement (en jours)')),
                ('Fin_Mois', models.CharField(choices=[('Oui', 'Oui'), ('Non', 'Non')], default='Non', max_length=3, verbose_name='Fin de Mois')),
                ('Modalites_Paiement', models.TextField(blank=True, verbose_name='Modalités particulières de Paiement')),
                ('Denomination_Client', models.CharField(max_length=50, verbose_name='Dénomination sociale Client')),
                ('Adresse_Client', models.CharField(blank=True, max_length=500)),
                ('CP_Client', models.CharField(blank=True, max_length=5, validators=[django.core.validators.RegexValidator(message='le code postal doit être composé de 5 chiffres.', regex='^[0-9]+$')], verbose_name='Code postal')),
                ('Ville_Client', models.CharField(blank=True, max_length=150)),
                ('Civilite_Client', models.CharField(blank=True, choices=[('M.', 'M.'), ('Mme', 'Mme')], max_length=3, verbose_name='Civilité')),
                ('Nom_Client', models.CharField(blank=True, max_length=50, verbose_name='Nom')),
                ('Prenom_Client', models.CharField(blank=True, max_length=50, verbose_name='Prénom')),
                ('Email_Client', models.EmailField(blank=True, max_length=70, verbose_name='Email')),
                ('Denomination_Facture', models.CharField(max_length=50, verbose_name='Dénominsation sociale Facture')),
                ('Adresse_Facture', models.CharField(max_length=500)),
                ('CP_Facture', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator(message='le code postal doit être composé de 5 chiffres.', regex='^[0-9]+$')], verbose_name='Code postal')),
                ('Ville_Facture', models.CharField(max_length=150)),
                ('Civilite_Facture', models.CharField(blank=True, choices=[('M.', 'M.'), ('Mme', 'Mme')], max_length=3)),
                ('Nom_Facture', models.CharField(blank=True, max_length=50, verbose_name='Nom')),
                ('Prenom_Facture', models.CharField(blank=True, max_length=50, verbose_name='Prénom')),
                ('Email_Facture', models.EmailField(blank=True, max_length=70, verbose_name='Email')),
                ('Civilite_Pilote', models.CharField(blank=True, choices=[('M.', 'M.'), ('Mme', 'Mme')], max_length=3)),
                ('Nom_Pilote', models.CharField(blank=True, max_length=50)),
                ('Prenom_Pilote', models.CharField(blank=True, max_length=50)),
                ('Tel_Portable_Pilote', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message='Un numero de téléphone est attendu. On attend 10 chiffres.', regex='^[0-9]+$')], verbose_name='Numéro de Portable')),
                ('Email_Pilote', models.EmailField(blank=True, max_length=70)),
                ('ID_Affaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bdd.affaire', verbose_name="Nom de l'affaire")),
                ('ID_Envoi_Facture', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='bdd.envoi_facture', verbose_name="Adresse d'envoi de la facture")),
                ('ID_Payeur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bdd.client', verbose_name='Payeur')),
                ('ID_Pilote', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bdd.pilote', verbose_name='Pilote')),
            ],
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=70)),
                ('file', models.FileField(upload_to='attachments', verbose_name='Attachment')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bdd.infoemail', verbose_name='InfoEmail')),
            ],
        ),
        migrations.AddField(
            model_name='affaire',
            name='ID_Client_Cache',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_ID_Client_Cache', to='bdd.client', verbose_name='Client Caché'),
        ),
        migrations.AddField(
            model_name='affaire',
            name='ID_Envoi_Facture',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bdd.envoi_facture', verbose_name='Adresse Envoi Facture'),
        ),
        migrations.AddField(
            model_name='affaire',
            name='ID_Mission',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bdd.offre_mission', verbose_name='Nom de la mission'),
        ),
        migrations.AddField(
            model_name='affaire',
            name='ID_Payeur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_ID_Payeur', to='bdd.client', verbose_name='Payeur'),
        ),
        migrations.AddField(
            model_name='affaire',
            name='ID_Pilote',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bdd.pilote', verbose_name='Pilote'),
        ),
    ]
